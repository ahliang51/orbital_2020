{"ast":null,"code":"import \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/divider/style\";\nimport _Divider from \"antd/lib/divider\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/notification/style\";\nimport _notification from \"antd/lib/notification\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nvar _jsxFileName = \"/Users/lundypang/OneDrive/Self-Learning shit/orbital_2020/web-frontend/src/components/Register/Register.js\";\nimport React, { Component } from \"react\";\nimport Grid from \"antd/lib/card/Grid\";\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport { backendUrl } from '../../global-variables';\nimport Logo from \"../Logo/Logo\";\nimport * as authActionTypes from '../../store/actions/authActions';\nimport * as globalActionTypes from '../../store/actions/globalActions';\nimport \"./Register.scss\";\nimport { connect } from \"react-redux\";\nconst {\n  Option\n} = _Select;\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      offset: 8\n    }\n  }\n};\n\nclass Register extends Component {\n  render() {\n    let onFinish = values => {\n      console.log('Received values of form: ', values);\n      this.props.toggleLoading();\n      axios.post(backendUrl + '/auth/register', {\n        email: values.email,\n        password: values.password\n      }).then(response => {\n        console.log(response);\n\n        if (response.data.success) {\n          this.props.setAuthType(authActionTypes.SET_AUTH_EMAIL);\n          localStorage.setItem('token', response.data.token);\n          this.props.saveToken(response.data.token);\n\n          _notification.success({\n            message: 'Success',\n            description: \"You have successfully signed up!!\",\n            placement: 'bottomRight'\n          });\n\n          this.props.history.push(\"/home\");\n        } else {\n          _notification.error({\n            message: 'Error',\n            description: response.data.message,\n            placement: 'bottomRight'\n          });\n        }\n\n        this.props.toggleLoading();\n      });\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(_Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(_Col, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(_Col, {\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(_Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(_Form, Object.assign({}, formItemLayout, {\n      onFinish: onFinish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(_Form.Item, {\n      name: \"email\",\n      label: \"E-mail\",\n      rules: [{\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }, {\n        required: true,\n        message: 'Please input your E-mail!'\n      }],\n      hasFeedback: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(_Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(_Form.Item, {\n      name: \"password\",\n      label: \"Password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      hasFeedback: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(_Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(_Form.Item, {\n      name: \"confirm\",\n      label: \"Confirm Password\",\n      dependencies: ['password'],\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: 'Please confirm your password!'\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(rule, value) {\n          if (!value || getFieldValue('password') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject('The two passwords that you entered do not match!');\n        }\n\n      })],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(_Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(_Form.Item, Object.assign({}, tailFormItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(_Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(_Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(_Button, {\n      type: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 25\n      }\n    }, \"Back\"))), /*#__PURE__*/React.createElement(_Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(_Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 23\n      }\n    }, \"Register\")))))), /*#__PURE__*/React.createElement(_Col, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setAuthType: authType => {\n      dispatch({\n        type: authType\n      });\n    },\n    saveToken: token => {\n      dispatch({\n        type: authActionTypes.SAVE_TOKEN,\n        payload: token\n      });\n    },\n    toggleLoading: () => {\n      dispatch({\n        type: globalActionTypes.TOGGLE_LOADING\n      });\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Register);","map":{"version":3,"sources":["/Users/lundypang/OneDrive/Self-Learning shit/orbital_2020/web-frontend/src/components/Register/Register.js"],"names":["React","Component","Grid","Link","axios","backendUrl","Logo","authActionTypes","globalActionTypes","connect","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","Register","render","onFinish","values","console","log","props","toggleLoading","post","email","password","then","response","data","success","setAuthType","SET_AUTH_EMAIL","localStorage","setItem","token","saveToken","message","description","placement","history","push","error","type","required","getFieldValue","validator","rule","value","Promise","resolve","reject","mapDispatchToProps","dispatch","authType","SAVE_TOKEN","payload","TOGGLE_LOADING"],"mappings":"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","sourcesContent":["import React, { Component, } from \"react\";\n\nimport {\n  Form,\n  Input,\n  Select,\n  Button,\n  Col,\n  Row,\n  Divider\n} from 'antd';\nimport Grid from \"antd/lib/card/Grid\";\n\nimport { Link } from \"react-router-dom\";\n\nimport axios from 'axios';\n\nimport { notification } from 'antd';\n\nimport { backendUrl } from '../../global-variables';\nimport Logo from \"../Logo/Logo\";\nimport * as authActionTypes from '../../store/actions/authActions'\nimport * as globalActionTypes from '../../store/actions/globalActions'\n\nimport \"./Register.scss\";\nimport { connect } from \"react-redux\";\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\n\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      offset: 8,\n    },\n  },\n};\n\nclass Register extends Component {\n\n\n  render() {\n\n    let onFinish = values => {\n      console.log('Received values of form: ', values);\n\n      this.props.toggleLoading();\n\n      axios.post(backendUrl + '/auth/register', {\n        email: values.email,\n        password: values.password\n      }).then((response) => {\n        console.log(response)\n        if (response.data.success) {\n          this.props.setAuthType(authActionTypes.SET_AUTH_EMAIL)\n          localStorage.setItem('token', response.data.token)\n          this.props.saveToken(response.data.token);\n          notification.success({\n            message: 'Success',\n            description: \"You have successfully signed up!!\",\n            placement: 'bottomRight'\n          });\n          this.props.history.push(\"/home\");\n        } else {\n          notification.error({\n            message: 'Error',\n            description: response.data.message,\n            placement: 'bottomRight'\n          });\n        }\n        this.props.toggleLoading();\n\n      })\n    };\n\n    return (\n      <div className=\"Register\">\n        <Grid>\n          <Row>\n            <Col xs={6}></Col>\n            <Col xs={12}>\n              <Logo></Logo>\n              <Divider></Divider>\n              <Form {...formItemLayout} onFinish={onFinish} >\n                {/* <Form.Item\n                  name=\"firstName\"\n                  label=\"First Name\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input your first name',\n                    },\n                  ]}\n                  hasFeedback\n                >\n                  <Input />\n                </Form.Item>\n\n                <Form.Item\n                  name=\"lastName\"\n                  label=\"Last Name\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input your last name',\n                    },\n                  ]}\n                  hasFeedback\n                >\n                  <Input />\n                </Form.Item> */}\n\n                <Form.Item\n                  name=\"email\"\n                  label=\"E-mail\"\n                  rules={[\n                    {\n                      type: 'email',\n                      message: 'The input is not valid E-mail!',\n                    },\n                    {\n                      required: true,\n                      message: 'Please input your E-mail!',\n                    },\n                  ]}\n                  hasFeedback>\n                  <Input />\n                </Form.Item>\n\n                {/* <Form.Item\n                  name=\"tradingExperience\"\n                  label=\"Trading Experience\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please select your experience',\n                    },\n                  ]}\n                  hasFeedback\n                >\n                  <Select placeholder=\"Select Experience\">\n                    <Option value=\"Beginner\">Beginner</Option>\n                    <Option value=\"lessThan5\">Less than 5 years</Option>\n                    <Option value=\"5to10\">5 to 10 years</Option>\n                    <Option value=\"moreThan10\">More than 10 years</Option>\n                  </Select>\n                </Form.Item>\n\n                <Form.Item\n                  name=\"riskAppetite\"\n                  label=\"Risk Appetite\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please select your risk appetite',\n                    },\n                  ]}\n                  hasFeedback\n                >\n                  <Select placeholder=\"Select Risk Appetite\">\n                    <Option value=\"giamSiap\">Giam Siap</Option>\n                    <Option value=\"okay\">Okay Lah</Option>\n                    <Option value=\"lamborgini\">Lamborgini here i come</Option>\n                  </Select>\n                </Form.Item> */}\n\n                <Form.Item\n                  name=\"password\"\n                  label=\"Password\"\n                  rules={[{\n                    required: true,\n                    message: 'Please input your password!',\n                  }]}\n                  hasFeedback>\n                  <Input.Password />\n                </Form.Item>\n\n                <Form.Item\n                  name=\"confirm\"\n                  label=\"Confirm Password\"\n                  dependencies={['password']}\n                  hasFeedback\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please confirm your password!',\n                    },\n                    ({ getFieldValue }) => ({\n                      validator(rule, value) {\n                        if (!value || getFieldValue('password') === value) {\n                          return Promise.resolve();\n                        }\n                        return Promise.reject('The two passwords that you entered do not match!');\n                      },\n                    }),\n                  ]}\n                >\n                  <Input.Password />\n                </Form.Item>\n                <Form.Item {...tailFormItemLayout}>\n                  <Row>\n                    <Col span={12}>\n                      <Link to=\"/\">\n                        <Button type=\"primary\">\n                          Back\n                         </Button>\n                      </Link>\n\n                    </Col>\n                    <Col span={12}>\n                      <Button type=\"primary\" htmlType=\"submit\">\n                        Register\n                 </Button>\n                    </Col>\n                  </Row>\n\n                </Form.Item>\n\n              </Form>\n\n            </Col>\n            <Col xs={6}></Col>\n          </Row>\n        </Grid>\n\n      </div >\n\n\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setAuthType: (authType) => { dispatch({ type: authType }) },\n    saveToken: (token) => { dispatch({ type: authActionTypes.SAVE_TOKEN, payload: token }) },\n    toggleLoading: () => { dispatch({ type: globalActionTypes.TOGGLE_LOADING }) },\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Register);"]},"metadata":{},"sourceType":"module"}