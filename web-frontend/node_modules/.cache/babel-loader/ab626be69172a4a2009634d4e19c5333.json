{"ast":null,"code":"import \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/divider/style\";\nimport _Divider from \"antd/lib/divider\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/notification/style\";\nimport _notification from \"antd/lib/notification\";\nvar _jsxFileName = \"/Users/lundypang/OneDrive/Self-Learning shit/orbital_2020/web-frontend/src/components/Home/Profile/AccountDetails/AccountDetails.js\";\nimport React, { Component } from 'react';\nimport './account-details.scss';\nimport CustomModal from '../../../../UI/Modal/Modal';\nimport * as globalActionTypes from '../../../../store/actions/globalActions';\nimport * as userActionTypes from '../../../../store/actions/userActions';\nimport { connect } from \"react-redux\";\nimport { backendUrl } from '../../../../global-variables';\nimport axios from 'axios';\nimport Moment from 'react-moment';\n\nclass AccountDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showEmailModal = () => {\n      this.setState({\n        emailModalVisible: true\n      });\n    };\n\n    this.handleEmailModalCancel = e => {\n      this.setState({\n        emailModalVisible: false\n      });\n    };\n\n    this.onEmailUpdate = values => {\n      this.props.toggleLoading();\n      axios.post(backendUrl + '/user/update-email', {\n        email: values.email\n      }).then(response => {\n        console.log(response);\n\n        if (response.data.success) {\n          console.log(response.data.user);\n          this.props.updateEmail(response.data.user);\n\n          _notification.success({\n            message: 'Success',\n            description: \"You have successfully changed your email\",\n            placement: 'bottomRight'\n          });\n        } else {\n          _notification.error({\n            message: 'Error',\n            description: response.data.message,\n            placement: 'bottomRight'\n          });\n        }\n\n        this.props.toggleLoading();\n        this.setState({\n          emailModalVisible: false\n        });\n      }).catch(error => {\n        _notification.error({\n          message: 'Error',\n          description: error,\n          placement: 'bottomRight'\n        });\n\n        this.props.toggleLoading();\n      });\n    };\n\n    this.showPasswordModal = () => {\n      this.setState({\n        passwordModalVisible: true\n      });\n    };\n\n    this.handlePasswordModalCancel = e => {\n      this.setState({\n        passwordModalVisible: false\n      });\n    };\n\n    this.onPasswordUpdate = value => {\n      console.log(value);\n    };\n\n    this.state = {\n      emailModalVisible: false,\n      passwordModalVisible: false,\n      emailValidated: false,\n      passwordValidated: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"account-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(_Row, {\n      align: \"middle\",\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, \"Account Details\")), /*#__PURE__*/React.createElement(_Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(_Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(_Col, {\n      span: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(_Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(_Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, \"Email Address : \", this.props.user ? this.props.user.email : \"\"), /*#__PURE__*/React.createElement(_Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, \"Registration Date : \", /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Moment, {\n      date: this.props.user ? this.props.user.createdDate : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }))))), /*#__PURE__*/React.createElement(_Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(_Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(_Col, {\n      span: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(_Col, {\n      span: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.showEmailModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 35\n      }\n    }, \"Change Email\")), /*#__PURE__*/React.createElement(_Col, {\n      span: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(_Col, {\n      span: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.showPasswordModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 35\n      }\n    }, \"Change Password \"))), /*#__PURE__*/React.createElement(_Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CustomModal, {\n      visible: this.state.emailModalVisible,\n      handleOk: this.handleEmailModalOk,\n      handleCancel: this.handleEmailModalCancel,\n      title: \"Change Email\",\n      formName: \"email-update-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(_Form, {\n      id: \"email-update-form\",\n      onFinish: this.onEmailUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(_Form.Item, {\n      name: \"email\",\n      label: \"E-mail\",\n      rules: [{\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }, {\n        required: true,\n        message: 'Please input your E-mail!'\n      }],\n      hasFeedback: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(_Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(CustomModal, {\n      visible: this.state.passwordModalVisible,\n      handleOk: this.handlePasswordModalOk,\n      handleCancel: this.handlePasswordModalCancel,\n      title: \"Change Password\",\n      formName: \"password-update-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(_Form, {\n      id: \"password-update-form\",\n      onFinish: this.onPasswordUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(_Form.Item, {\n      name: \"password\",\n      label: \"Password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      hasFeedback: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(_Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(_Form.Item, {\n      name: \"confirm\",\n      label: \"Confirm Password\",\n      dependencies: ['password'],\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: 'Please confirm your password!'\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(rule, value) {\n          if (!value || getFieldValue('password') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject('The two passwords that you entered do not match!');\n        }\n\n      })],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(_Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    user: state.user.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleLoading: () => {\n      dispatch({\n        type: globalActionTypes.TOGGLE_LOADING\n      });\n    },\n    updateEmail: user => {\n      dispatch({\n        type: userActionTypes.UPDATE_USER_DETAILS,\n        payload: user\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountDetails);","map":{"version":3,"sources":["/Users/lundypang/OneDrive/Self-Learning shit/orbital_2020/web-frontend/src/components/Home/Profile/AccountDetails/AccountDetails.js"],"names":["React","Component","CustomModal","globalActionTypes","userActionTypes","connect","backendUrl","axios","Moment","AccountDetails","constructor","props","showEmailModal","setState","emailModalVisible","handleEmailModalCancel","e","onEmailUpdate","values","toggleLoading","post","email","then","response","console","log","data","success","user","updateEmail","message","description","placement","error","catch","showPasswordModal","passwordModalVisible","handlePasswordModalCancel","onPasswordUpdate","value","state","emailValidated","passwordValidated","render","createdDate","handleEmailModalOk","type","required","handlePasswordModalOk","getFieldValue","validator","rule","Promise","resolve","reject","mapStateToProps","auth","mapDispatchToProps","dispatch","TOGGLE_LOADING","UPDATE_USER_DETAILS","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, Divider, Button, Form, Input, notification } from 'antd';\nimport './account-details.scss'\nimport CustomModal from '../../../../UI/Modal/Modal';\nimport * as globalActionTypes from '../../../../store/actions/globalActions'\nimport * as userActionTypes from '../../../../store/actions/userActions'\nimport { connect } from \"react-redux\";\nimport { backendUrl } from '../../../../global-variables';\nimport axios from 'axios';\nimport Moment from 'react-moment';\n\nclass AccountDetails extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            emailModalVisible: false,\n            passwordModalVisible: false,\n            emailValidated: false,\n            passwordValidated: false\n        }\n\n    }\n\n    showEmailModal = () => {\n        this.setState({\n            emailModalVisible: true,\n        });\n    }\n\n    handleEmailModalCancel = e => {\n        this.setState({\n            emailModalVisible: false,\n        });\n    };\n\n    onEmailUpdate = values => {\n        this.props.toggleLoading();\n\n        axios.post(backendUrl + '/user/update-email', {\n            email: values.email\n        }).then((response) => {\n            console.log(response)\n            if (response.data.success) {\n                console.log(response.data.user)\n                this.props.updateEmail(response.data.user)\n                notification.success({\n                    message: 'Success',\n                    description: \"You have successfully changed your email\",\n                    placement: 'bottomRight'\n                });\n            } else {\n                notification.error({\n                    message: 'Error',\n                    description: response.data.message,\n                    placement: 'bottomRight'\n                });\n            }\n            this.props.toggleLoading();\n            this.setState({\n                emailModalVisible: false,\n            });\n        }).catch(error => {\n            notification.error({\n                message: 'Error',\n                description: error,\n                placement: 'bottomRight'\n            });\n            this.props.toggleLoading();\n\n        })\n\n    }\n\n    showPasswordModal = () => {\n        this.setState({\n            passwordModalVisible: true,\n        });\n    }\n\n    handlePasswordModalCancel = e => {\n        this.setState({\n            passwordModalVisible: false,\n        });\n    };\n\n    onPasswordUpdate = (value) => {\n        console.log(value)\n    }\n\n    render() {\n        return (\n            <div className=\"account-details\">\n                <Row align=\"middle\" justify=\"center\">\n                    <div className=\"header\">\n                        Account Details\n                     </div>\n                </Row>\n                <Divider />\n                <Row >\n                    <Col span={2}></Col>\n                    <Col>\n                        <Row>\n                            Email Address : {this.props.user ? this.props.user.email : \"\"}\n                        </Row>\n                        <Row>\n                            Registration Date : <div>\n                                <Moment date={this.props.user ? this.props.user.createdDate : null} />\n                            </div>\n                        </Row>\n                    </Col>\n                </Row>\n                <Divider />\n                <Row>\n                    <Col span={2}></Col>\n                    <Col span={4}><Button type=\"primary\" onClick={this.showEmailModal}>Change Email</Button></Col>\n                    <Col span={4}></Col>\n                    <Col span={4}><Button type=\"primary\" onClick={this.showPasswordModal}>Change Password </Button></Col>\n                </Row>\n                <Divider />\n\n                <CustomModal visible={this.state.emailModalVisible}\n                    handleOk={this.handleEmailModalOk}\n                    handleCancel={this.handleEmailModalCancel}\n                    title=\"Change Email\"\n                    formName=\"email-update-form\"\n                >\n                    <Form id='email-update-form' onFinish={this.onEmailUpdate}>\n                        <Form.Item\n                            name=\"email\"\n                            label=\"E-mail\"\n                            rules={[\n                                {\n                                    type: 'email',\n                                    message: 'The input is not valid E-mail!',\n                                },\n                                {\n                                    required: true,\n                                    message: 'Please input your E-mail!',\n                                },\n                            ]}\n                            hasFeedback>\n                            <Input />\n                        </Form.Item>\n                    </Form>\n                </CustomModal>\n                <CustomModal visible={this.state.passwordModalVisible}\n                    handleOk={this.handlePasswordModalOk}\n                    handleCancel={this.handlePasswordModalCancel}\n                    title=\"Change Password\"\n                    formName=\"password-update-form\">\n                    <Form id='password-update-form' onFinish={this.onPasswordUpdate}>\n                        <Form.Item\n                            name=\"password\"\n                            label=\"Password\"\n                            rules={[{\n                                required: true,\n                                message: 'Please input your password!',\n                            }]}\n                            hasFeedback>\n                            <Input.Password />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"confirm\"\n                            label=\"Confirm Password\"\n                            dependencies={['password']}\n                            hasFeedback\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please confirm your password!',\n                                },\n                                ({ getFieldValue }) => ({\n                                    validator(rule, value) {\n                                        if (!value || getFieldValue('password') === value) {\n                                            return Promise.resolve();\n                                        }\n                                        return Promise.reject('The two passwords that you entered do not match!');\n                                    },\n                                }),\n                            ]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n                    </Form>\n                </CustomModal>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        auth: state.auth,\n        user: state.user.user\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleLoading: () => { dispatch({ type: globalActionTypes.TOGGLE_LOADING }) },\n        updateEmail: (user) => { dispatch({ type: userActionTypes.UPDATE_USER_DETAILS, payload: user }) }\n    }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountDetails);"]},"metadata":{},"sourceType":"module"}