{"ast":null,"code":"var _jsxFileName = \"/Users/lundypang/OneDrive/Self-Learning shit/orbital_2020/web-frontend/src/components/Home/Trade/Candlestick/CandleStickChart.js\";\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { scaleTime } from \"d3-scale\";\nimport { utcDay } from \"d3-time\";\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\nimport { CandlestickSeries } from \"react-stockcharts/lib/series\";\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\nimport { last, timeIntervalBarWidth } from \"react-stockcharts/lib/utils\";\n\nclass CandleStickChart extends Component {\n  render() {\n    const {\n      type,\n      width,\n      data,\n      ratio\n    } = this.props;\n\n    const xAccessor = d => d.date;\n\n    const xExtents = [xAccessor(last(data)), xAccessor(data[data.length - 100])];\n    return /*#__PURE__*/React.createElement(ChartCanvas, {\n      height: 400,\n      ratio: ratio,\n      width: width,\n      margin: {\n        left: 50,\n        right: 50,\n        top: 10,\n        bottom: 30\n      } // type={type}\n      ,\n      seriesName: \"MSFT\",\n      data: data,\n      xAccessor: xAccessor,\n      xScale: scaleTime(),\n      xExtents: xExtents,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      id: 1,\n      yExtents: d => [d.high, d.low],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(XAxis, {\n      axisAt: \"bottom\",\n      orient: \"bottom\",\n      ticks: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      axisAt: \"left\",\n      orient: \"left\",\n      ticks: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(CandlestickSeries, {\n      width: timeIntervalBarWidth(utcDay),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nCandleStickChart.propTypes = {\n  data: PropTypes.array.isRequired,\n  width: PropTypes.number.isRequired,\n  ratio: PropTypes.number.isRequired // type: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\n\n}; // CandleStickChart.defaultProps = {\n//     type: \"svg\",\n// };\n\nCandleStickChart = fitWidth(CandleStickChart);\nexport default CandleStickChart;","map":{"version":3,"sources":["/Users/lundypang/OneDrive/Self-Learning shit/orbital_2020/web-frontend/src/components/Home/Trade/Candlestick/CandleStickChart.js"],"names":["React","Component","PropTypes","scaleTime","utcDay","ChartCanvas","Chart","CandlestickSeries","XAxis","YAxis","fitWidth","last","timeIntervalBarWidth","CandleStickChart","render","type","width","data","ratio","props","xAccessor","d","date","xExtents","length","left","right","top","bottom","high","low","propTypes","array","isRequired","number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,MAAT,QAAuB,SAAvB;AAEA,SAASC,WAAT,EAAsBC,KAAtB,QAAmC,mBAAnC;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,4BAA7B;AACA,SAASC,QAAT,QAAyB,8BAAzB;AACA,SAASC,IAAT,EAAeC,oBAAf,QAA2C,6BAA3C;;AAEA,MAAMC,gBAAN,SAA+BZ,SAA/B,CAAyC;AAErCa,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,IAAf;AAAqBC,MAAAA;AAArB,QAA+B,KAAKC,KAA1C;;AACA,UAAMC,SAAS,GAAGC,CAAC,IAAIA,CAAC,CAACC,IAAzB;;AACA,UAAMC,QAAQ,GAAG,CACbH,SAAS,CAACT,IAAI,CAACM,IAAD,CAAL,CADI,EAEbG,SAAS,CAACH,IAAI,CAACA,IAAI,CAACO,MAAL,GAAc,GAAf,CAAL,CAFI,CAAjB;AAMA,wBACI,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,GAArB;AACI,MAAA,KAAK,EAAEN,KADX;AAEI,MAAA,KAAK,EAAEF,KAFX;AAGI,MAAA,MAAM,EAAE;AAAES,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,KAAK,EAAE,EAAnB;AAAuBC,QAAAA,GAAG,EAAE,EAA5B;AAAgCC,QAAAA,MAAM,EAAE;AAAxC,OAHZ,CAII;AAJJ;AAKI,MAAA,UAAU,EAAC,MALf;AAMI,MAAA,IAAI,EAAEX,IANV;AAOI,MAAA,SAAS,EAAEG,SAPf;AAQI,MAAA,MAAM,EAAEjB,SAAS,EARrB;AASI,MAAA,QAAQ,EAAEoB,QATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAWI,oBAAC,KAAD;AAAO,MAAA,EAAE,EAAE,CAAX;AAAc,MAAA,QAAQ,EAAEF,CAAC,IAAI,CAACA,CAAC,CAACQ,IAAH,EAASR,CAAC,CAACS,GAAX,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAC,QAAd;AAAuB,MAAA,MAAM,EAAC,QAA9B;AAAuC,MAAA,KAAK,EAAE,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAC,MAAd;AAAqB,MAAA,MAAM,EAAC,MAA5B;AAAmC,MAAA,KAAK,EAAE,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,iBAAD;AAAmB,MAAA,KAAK,EAAElB,oBAAoB,CAACR,MAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAXJ,CADJ;AAmBH;;AA9BoC;;AAiCzCS,gBAAgB,CAACkB,SAAjB,GAA6B;AACzBd,EAAAA,IAAI,EAAEf,SAAS,CAAC8B,KAAV,CAAgBC,UADG;AAEzBjB,EAAAA,KAAK,EAAEd,SAAS,CAACgC,MAAV,CAAiBD,UAFC;AAGzBf,EAAAA,KAAK,EAAEhB,SAAS,CAACgC,MAAV,CAAiBD,UAHC,CAIzB;;AAJyB,CAA7B,C,CAOA;AACA;AACA;;AACApB,gBAAgB,GAAGH,QAAQ,CAACG,gBAAD,CAA3B;AAEA,eAAeA,gBAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\n\nimport { scaleTime } from \"d3-scale\";\nimport { utcDay } from \"d3-time\";\n\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\nimport { CandlestickSeries } from \"react-stockcharts/lib/series\";\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\nimport { last, timeIntervalBarWidth } from \"react-stockcharts/lib/utils\";\n\nclass CandleStickChart extends Component {\n\n    render() {\n        const { type, width, data, ratio } = this.props;\n        const xAccessor = d => d.date;\n        const xExtents = [\n            xAccessor(last(data)),\n            xAccessor(data[data.length - 100])\n        ];\n\n\n        return (\n            <ChartCanvas height={400}\n                ratio={ratio}\n                width={width}\n                margin={{ left: 50, right: 50, top: 10, bottom: 30 }}\n                // type={type}\n                seriesName=\"MSFT\"\n                data={data}\n                xAccessor={xAccessor}\n                xScale={scaleTime()}\n                xExtents={xExtents}>\n\n                <Chart id={1} yExtents={d => [d.high, d.low]}>\n                    <XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6} />\n                    <YAxis axisAt=\"left\" orient=\"left\" ticks={5} />\n                    <CandlestickSeries width={timeIntervalBarWidth(utcDay)} />\n                </Chart>\n            </ChartCanvas>\n        );\n    }\n}\n\nCandleStickChart.propTypes = {\n    data: PropTypes.array.isRequired,\n    width: PropTypes.number.isRequired,\n    ratio: PropTypes.number.isRequired,\n    // type: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\n};\n\n// CandleStickChart.defaultProps = {\n//     type: \"svg\",\n// };\nCandleStickChart = fitWidth(CandleStickChart);\n\nexport default CandleStickChart;"]},"metadata":{},"sourceType":"module"}