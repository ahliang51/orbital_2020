{"ast":null,"code":"var _jsxFileName = \"/Users/lundypang/OneDrive/Self-Learning shit/orbital_2020/web-frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { compose, combineReducers, createStore } from 'redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport globalReducer from './store/reducers/globalReducer';\nimport authReducer from './store/reducers/authReducer';\nimport userReducer from './store/reducers/userReducer';\nimport { Provider } from 'react-redux';\nimport axios from 'axios';\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst allReducer = combineReducers({\n  auth: authReducer,\n  global: globalReducer,\n  user: userReducer\n});\nconst store = createStore(allReducer, composeEnhancers());\naxios.interceptors.request.use(request => {\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': localStorage.getItem('token')\n  };\n  request.headers = headers;\n  return request;\n});\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }\n}))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/lundypang/OneDrive/Self-Learning shit/orbital_2020/web-frontend/src/index.js"],"names":["React","ReactDOM","BrowserRouter","compose","combineReducers","createStore","App","serviceWorker","globalReducer","authReducer","userReducer","Provider","axios","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","allReducer","auth","global","user","store","interceptors","request","use","headers","localStorage","getItem","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,WAArB;AAEA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,SAASC,OAAT,EAAkBC,eAAlB,EAAmCC,WAAnC,QAAsD,OAAtD;AAEA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CZ,OAAxE;AACA,MAAMa,UAAU,GAAGZ,eAAe,CAAC;AACjCa,EAAAA,IAAI,EAAER,WAD2B;AAE/BS,EAAAA,MAAM,EAAEV,aAFuB;AAGjCW,EAAAA,IAAI,EAAET;AAH2B,CAAD,CAAlC;AAKA,MAAMU,KAAK,GAAGf,WAAW,CAACW,UAAD,EAAaH,gBAAgB,EAA7B,CAAzB;AAEAD,KAAK,CAACS,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BD,OAAO,IAAI;AAExC,QAAME,OAAO,GAAG;AACd,oBAAgB,kBADF;AAEd,qBAAiBC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAFH,GAAhB;AAIAJ,EAAAA,OAAO,CAACE,OAAR,GAAkBA,OAAlB;AAEA,SAAOF,OAAP;AACD,CATD;AAaArB,QAAQ,CAAC0B,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEP,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,EAMEQ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CASA;AACA;AACA;;AACAtB,aAAa,CAACuB,UAAd","sourcesContent":["import React from 'react';\n\nimport ReactDOM from 'react-dom';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { compose, combineReducers, createStore } from 'redux';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport globalReducer from './store/reducers/globalReducer';\nimport authReducer from './store/reducers/authReducer'\nimport userReducer from './store/reducers/userReducer'\nimport { Provider } from 'react-redux';\nimport axios from 'axios';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst allReducer = combineReducers({\n  auth: authReducer\n  , global: globalReducer,\n  user: userReducer\n})\nconst store = createStore(allReducer, composeEnhancers())\n\naxios.interceptors.request.use(request => {\n\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': localStorage.getItem('token')\n  }\n  request.headers = headers\n\n  return request\n})\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}